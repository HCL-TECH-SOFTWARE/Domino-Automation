---
- name: Get list of all templates
  ansible.builtin.uri:
    url: '{{ semaphore__url }}/project/{{ project_number }}/templates'
    method: GET
    body_format: json
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{ semaphore_token }}'
  register: temp_list_result

- name: Get list of templates with the name "{{ template.name }}" in view number "{{ view_number }}"
  ansible.builtin.set_fact:
    temps: '{{ temp_list_result.json | selectattr("name", "equalto", template.name) | selectattr("view_id", "equalto", view_number | int) }}'

- name: Check if multiple templates with this name exist
  ansible.builtin.assert:
    that:
      - (temps | length) <= 1
    fail_msg: 'Multiple ({{ temps | length }}) templates with the name {{ template.name }} exist. Keep just one of them and delete the others.'

- name: Get the template number (if exists)
  ansible.builtin.set_fact:
    temp_number: '{{ (temps | first)["id"] }}'
  when: (temps | length) == 1

- name: Create a new template {{ template.name }}
  when: (temps | length) == 0
  block:
    - name: Create a new template
      ansible.builtin.uri:
        url: '{{ semaphore__url }}/project/{{ project_number }}/templates'
        method: POST
        body_format: json
        body: >-
          {
            'name': '{{ template.name }}',
            'project_id': {{ project_number | int }},
            'inventory_id': {{ inv_number | int }},
            'repository_id': {{ repo_number | int }},
            'environment_id': {{ env_number | int }},
            'view_id': {{ view_number | int }},
            'playbook': '{{ template.playbook }}',
            'description': '{{ template.description | default("") }}',
            'arguments': '{{ template.arguments | default([]) | to_json }}',
            'app': 'ansible',
            'task_params': {
              'tags': {{ template.tags | default([]) }},
              'skip_tags': {{ template.skip_tags | default([]) }}
            }
          }
        status_code: 201
        headers:
          Content-Type: application/json
          Accept: application/json
          Authorization: 'Bearer {{ semaphore_token }}'
        return_content: true
      changed_when: create_temp_result.status == 201
      register: create_temp_result

    - name: Store the newly created template number
      ansible.builtin.set_fact:
        temp_number: '{{ create_temp_result.json.id }}'


- name: Print Template number
  ansible.builtin.debug:
    msg: 'TEMPLATE NUMBER: {{ temp_number }}'
