---
- name: Get list of enviroments
  ansible.builtin.uri:
    url: '{{ semaphore__url }}/project/{{ project_number }}/environment'
    method: GET
    body_format: json
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{ semaphore_token }}'
  register: env_list_result

- name: Get list of environments with the name "{{ semaphore__environment }}"
  ansible.builtin.set_fact:
    envs: '{{ env_list_result.json | selectattr("name", "equalto", semaphore__environment) }}'

- name: Check if multiple environments with this name exist
  ansible.builtin.assert:
    that:
      - (envs | length) <= 1
    fail_msg: 'Multiple ({{ envs | length }}) templates with the name {{ semaphore__environment }} exist. Keep just one of them and delete the others.'

- name: Get the environment number (if exists)
  ansible.builtin.set_fact:
    env_number: '{{ (envs | first)["id"] }}'
  when: (envs | length) == 1

- name: Create a new environment {{ semaphore__environment }}
  when: (envs | length) == 0
  block:
    - name: Create a new environment
      ansible.builtin.uri:
        url: '{{ semaphore__url }}/project/{{ project_number }}/environment'
        method: POST
        body_format: json
        body: >-
          {
            'name': '{{ semaphore__environment }}',
            'project_id': {{ project_number | int }},
            'password': '',
            'json': '{{ semaphore__environment_json | to_json }}',
            'env': '{}'
          }
        status_code: 204
        headers:
          Content-Type: application/json
          Accept: application/json
          Authorization: 'Bearer {{ semaphore_token }}'
        return_content: true
      changed_when: create_env_result.status == 204
      register: create_env_result

    - name: Get list of enviroments
      ansible.builtin.uri:
        url: '{{ semaphore__url }}/project/{{ project_number }}/environment'
        method: GET
        body_format: json
        headers:
          Content-Type: application/json
          Accept: application/json
          Authorization: 'Bearer {{ semaphore_token }}'
      register: env_new_list_result

    - name: Get list of environments with the name "{{ semaphore__environment }}"
      ansible.builtin.set_fact:
        envs_new: '{{ env_new_list_result.json | selectattr("name", "equalto", semaphore__environment) }}'

    - name: Store the newly created environment number
      ansible.builtin.set_fact:
        env_number: '{{ (envs_new | first)["id"] }}'


- name: Print Environment number
  ansible.builtin.debug:
    msg: 'ENVIRONMENT NUMBER: {{ env_number }}'
