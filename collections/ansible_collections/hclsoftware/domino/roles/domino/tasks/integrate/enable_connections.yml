---
# - name: Get certificate from Connections HTTP server '{{ domino__connections_server }}'
#   ansible.builtin.shell:
#     cmd: >-
#       echo |
#       openssl s_client -connect {{ domino__connections_server }}:443 2>&1 |
#       sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'
#       > {{ domino__input_data_location }}/{{ domino__connections_server }}.cer
#   delegate_to: localhost
#   run_once: true
#   register: connections_certificate
#   changed_when:
#     - connections_certificate.changed
#     - connections_certificate.rc == 0

# ---------

- name: Enable Connections integration in notes.ini [VOP_LLN2_BSSUIServer_URL]
  become: true
  become_user: notes
  ansible.builtin.shell:
    chdir: '/local/notesdata'
    cmd: '/opt/hcl/domino/bin/server -c "set conf VOP_LLN2_BSSUIServer_URL=https://{{ domino__connections_server }}" 2>&1 &'
  register: connections_result
  changed_when:
    - connections_result.changed
    - connections_result.rc == 0

- name: Enable Connections integration in notes.ini [iNotes_WA_Security_NonceCheck]
  become: true
  become_user: notes
  ansible.builtin.shell:
    chdir: '/local/notesdata'
    cmd: '/opt/hcl/domino/bin/server -c "set conf iNotes_WA_Security_NonceCheck=" 2>&1 &'
  register: connections_nonce_result
  changed_when:
    - connections_nonce_result.changed
    - connections_nonce_result.rc == 0

- name: Enable Connections integration in notes.ini [iNotes_WA_Security_RefererCheck]
  become: true
  become_user: notes
  ansible.builtin.shell:
    chdir: '/local/notesdata'
    cmd: '/opt/hcl/domino/bin/server -c "set conf iNotes_WA_Security_RefererCheck=" 2>&1 &'
  register: connections_referer_result
  changed_when:
    - connections_referer_result.changed
    - connections_referer_result.rc == 0

- name: Upload Connections server certificate
  ansible.builtin.copy:
    src: '{{ domino__input_data_location }}/{{ domino__connections_server }}.cer'
    dest: '{{ domino__domino_install }}/{{ domino__connections_server }}.cer'
    mode: 'u=rw,g=r,o=r'

- name: 'Import certificate "{{ domino__connections_server }}" into cacerts'
  become: true
  ansible.builtin.shell:
    chdir: '/opt/hcl/domino/notes/latest/linux/jvm/bin'
    cmd: >-
      ./keytool -import -storepass changeit
      -cacerts
      -noprompt -trustcacerts
      -alias {{ domino__connections_server }}
      -file /local/install/domino/{{ domino__connections_server }}.cer
  register: cacerts_connections_import_result
  failed_when:
    - cacerts_connections_import_result.changed
    - cacerts_connections_import_result.rc != 0
    - '"already exists" not in cacerts_connections_import_result.stdout'
  changed_when:
    - cacerts_connections_import_result.changed
    - cacerts_connections_import_result.rc == 0

- name: Upload Domino server certificate (Micro CA)
  ansible.builtin.copy:
    src: '{{ domino__input_data_location }}/{{ domino__domino_domain }}-CA-MicroCA.cer'
    dest: '{{ domino__domino_install }}/{{ domino__domino_domain }}-CA-MicroCA.cer'
    mode: 'u=rw,g=r,o=r'

- name: 'Import certificate "{{ domino__domino_domain }} Micro CA" into cacerts'
  become: true
  ansible.builtin.shell:
    chdir: '/opt/hcl/domino/notes/latest/linux/jvm/bin'
    cmd: >-
      ./keytool -import -storepass changeit
      -cacerts
      -noprompt -trustcacerts
      -alias {{ domino__domino_domain | lower }}_micro_ca
      -file {{ domino__domino_install }}/{{ domino__domino_domain }}-CA-MicroCA.cer
  register: cacerts_domino_import_result
  failed_when:
    - cacerts_domino_import_result.changed
    - cacerts_domino_import_result.rc != 0
    - '"already exists" not in cacerts_domino_import_result.stdout'
  changed_when:
    - cacerts_domino_import_result.changed
    - cacerts_domino_import_result.rc == 0

- name: Print certificates stored in cacerts
  ansible.builtin.shell:
    chdir: '/opt/hcl/domino/notes/latest/linux/jvm/bin'
    cmd: './keytool -list -storepass changeit -cacerts'
  register: cacerts_list_result
  changed_when:
    - cacerts_list_result.changed
    - cacerts_list_result.rc == 0
    - '"Your keystore contains" not in cacerts_list_result.stdout'
