- name: Check that the DRAPI server is running
  block:
    - name: Check that DRAPI is responding on the api access point - anonymous
      ansible.builtin.uri:
        url: 'http://{{ domino__domino_hostname }}:8880/api'
        user: '{{ domino__admin_first_name }} {{ domino__admin_last_name }}'
        password: '{{ domino__admin_password }}'
        force_basic_auth: true
        return_content: true
        status_code: 200
        validate_certs: false
      register: drapi_status_response

    - name: Get bearer token for authorized access to DRAPI
      ansible.builtin.uri:
        url: 'http://{{ domino__domino_hostname }}:8880/api/v1/auth'
        method: POST
        # headers:
        #   Content-Type: application/json
        body_format: json
        body:
          username: '{{ domino__admin_first_name }} {{ domino__admin_last_name }}'
          password: '{{ domino__admin_password }}'
        status_code: 200
      register: drapi_token_response

    - name: Use bearer token for authorized access to DRAPI
      ansible.builtin.uri:
        url: 'http://{{ domino__domino_hostname }}:8880/api/v1/info'
        method: GET
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{ drapi_token_response.json.bearer }}'
        status_code: 200
      register: drapi_login_response

    - name: Mark drapi verification as PASS
      vars:
        index: '{{ verify_info | ansible.utils.index_of("eq", "drapi", "name") }}'
      ansible.utils.update_fact:
        updates:
          - path: 'verify_info.{{ index }}.result'
            value: 'PASS'
          - path: 'verify_info.{{ index }}.note'
            value: 'Version: {{ drapi_login_response.json.KeepProperties.version }}. Authenticated user: {{ drapi_token_response.json.claims.CN }}'
      changed_when: false
      register: drapi_verify_updated_result

  rescue:
    - name: Mark drapi verification as FAIL
      vars:
        index: '{{ verify_info | ansible.utils.index_of("eq", "drapi", "name") }}'
      ansible.utils.update_fact:
        updates:
          - path: 'verify_info.{{ index }}.result'
            value: 'FAIL'
      changed_when: false
      register: drapi_verify_updated_result

  always:
    - name: Store the updated value into the master fact
      ansible.builtin.set_fact:
        verify_info: '{{ drapi_verify_updated_result.verify_info }}'
